version: '3.8'

services:
  fitflix-backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: fitflix-backend-prod
    restart: unless-stopped
    ports:
      - "10000:10000"
    environment:
      - NODE_ENV=production
      - PORT=10000
      - DATABASE_URL=${DATABASE_URL}
      - DIRECT_URL=${DIRECT_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - COOKIE_SECRET=${COOKIE_SECRET}
      - ADMIN_DASHBOARD_URL=${ADMIN_DASHBOARD_URL}
      - WEBSITE_URL=${WEBSITE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - ./logs:/app/logs
    networks:
      - fitflix-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:10000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: fitflix-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fitflix-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  # Optional: Add Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: fitflix-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - fitflix-backend
    networks:
      - fitflix-network

volumes:
  redis_data:

networks:
  fitflix-network:
    driver: bridge
